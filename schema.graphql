type Transaction @entity {
  id: ID!
  txn: String!
  from: Wallet!
  to: Wallet!
  value: BigInt!
  timestamp: BigInt!
  wallets: [WalletTransaction!]! @derivedFrom(field: "transaction")
}

type Wallet @entity {
  id: ID!
  address: String!
  value: BigInt!
  dailyStates: [DailyWalletState!]! @derivedFrom(field: "wallet")
  transactions: [WalletTransaction!]! @derivedFrom(field: "wallet")
}

type WalletTransaction @entity {
  id: ID!
  wallet: Wallet!
  transaction: Transaction!
  value: BigInt!
  timestamp: BigInt!
}

type HoldersCounter @entity {
  id: ID!
  count: Int!
}

type DailyHoldersState @entity {
  id: ID!
  start: BigInt!
  end: BigInt!
  count: Int!
}

type DailyWalletState @entity {
  id: ID!
  wallet: Wallet!
  start: BigInt!
  end: BigInt!
  inflow: BigInt!
  outflow: BigInt!
  volume: BigInt!
}
